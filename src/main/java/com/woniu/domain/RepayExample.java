package com.woniu.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class RepayExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table repay
     *
     * @mbggenerated Mon Aug 19 15:11:02 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table repay
     *
     * @mbggenerated Mon Aug 19 15:11:02 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table repay
     *
     * @mbggenerated Mon Aug 19 15:11:02 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table repay
     *
     * @mbggenerated Mon Aug 19 15:11:02 CST 2019
     */
    public RepayExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table repay
     *
     * @mbggenerated Mon Aug 19 15:11:02 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table repay
     *
     * @mbggenerated Mon Aug 19 15:11:02 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table repay
     *
     * @mbggenerated Mon Aug 19 15:11:02 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table repay
     *
     * @mbggenerated Mon Aug 19 15:11:02 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table repay
     *
     * @mbggenerated Mon Aug 19 15:11:02 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table repay
     *
     * @mbggenerated Mon Aug 19 15:11:02 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table repay
     *
     * @mbggenerated Mon Aug 19 15:11:02 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table repay
     *
     * @mbggenerated Mon Aug 19 15:11:02 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table repay
     *
     * @mbggenerated Mon Aug 19 15:11:02 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table repay
     *
     * @mbggenerated Mon Aug 19 15:11:02 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table repay
     *
     * @mbggenerated Mon Aug 19 15:11:02 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andRepayidIsNull() {
            addCriterion("repayid is null");
            return (Criteria) this;
        }

        public Criteria andRepayidIsNotNull() {
            addCriterion("repayid is not null");
            return (Criteria) this;
        }

        public Criteria andRepayidEqualTo(Integer value) {
            addCriterion("repayid =", value, "repayid");
            return (Criteria) this;
        }

        public Criteria andRepayidNotEqualTo(Integer value) {
            addCriterion("repayid <>", value, "repayid");
            return (Criteria) this;
        }

        public Criteria andRepayidGreaterThan(Integer value) {
            addCriterion("repayid >", value, "repayid");
            return (Criteria) this;
        }

        public Criteria andRepayidGreaterThanOrEqualTo(Integer value) {
            addCriterion("repayid >=", value, "repayid");
            return (Criteria) this;
        }

        public Criteria andRepayidLessThan(Integer value) {
            addCriterion("repayid <", value, "repayid");
            return (Criteria) this;
        }

        public Criteria andRepayidLessThanOrEqualTo(Integer value) {
            addCriterion("repayid <=", value, "repayid");
            return (Criteria) this;
        }

        public Criteria andRepayidIn(List<Integer> values) {
            addCriterion("repayid in", values, "repayid");
            return (Criteria) this;
        }

        public Criteria andRepayidNotIn(List<Integer> values) {
            addCriterion("repayid not in", values, "repayid");
            return (Criteria) this;
        }

        public Criteria andRepayidBetween(Integer value1, Integer value2) {
            addCriterion("repayid between", value1, value2, "repayid");
            return (Criteria) this;
        }

        public Criteria andRepayidNotBetween(Integer value1, Integer value2) {
            addCriterion("repayid not between", value1, value2, "repayid");
            return (Criteria) this;
        }

        public Criteria andLoanapplyidIsNull() {
            addCriterion("loanapplyid is null");
            return (Criteria) this;
        }

        public Criteria andLoanapplyidIsNotNull() {
            addCriterion("loanapplyid is not null");
            return (Criteria) this;
        }

        public Criteria andLoanapplyidEqualTo(Integer value) {
            addCriterion("loanapplyid =", value, "loanapplyid");
            return (Criteria) this;
        }

        public Criteria andLoanapplyidNotEqualTo(Integer value) {
            addCriterion("loanapplyid <>", value, "loanapplyid");
            return (Criteria) this;
        }

        public Criteria andLoanapplyidGreaterThan(Integer value) {
            addCriterion("loanapplyid >", value, "loanapplyid");
            return (Criteria) this;
        }

        public Criteria andLoanapplyidGreaterThanOrEqualTo(Integer value) {
            addCriterion("loanapplyid >=", value, "loanapplyid");
            return (Criteria) this;
        }

        public Criteria andLoanapplyidLessThan(Integer value) {
            addCriterion("loanapplyid <", value, "loanapplyid");
            return (Criteria) this;
        }

        public Criteria andLoanapplyidLessThanOrEqualTo(Integer value) {
            addCriterion("loanapplyid <=", value, "loanapplyid");
            return (Criteria) this;
        }

        public Criteria andLoanapplyidIn(List<Integer> values) {
            addCriterion("loanapplyid in", values, "loanapplyid");
            return (Criteria) this;
        }

        public Criteria andLoanapplyidNotIn(List<Integer> values) {
            addCriterion("loanapplyid not in", values, "loanapplyid");
            return (Criteria) this;
        }

        public Criteria andLoanapplyidBetween(Integer value1, Integer value2) {
            addCriterion("loanapplyid between", value1, value2, "loanapplyid");
            return (Criteria) this;
        }

        public Criteria andLoanapplyidNotBetween(Integer value1, Integer value2) {
            addCriterion("loanapplyid not between", value1, value2, "loanapplyid");
            return (Criteria) this;
        }

        public Criteria andUserinfoidIsNull() {
            addCriterion("userinfoid is null");
            return (Criteria) this;
        }

        public Criteria andUserinfoidIsNotNull() {
            addCriterion("userinfoid is not null");
            return (Criteria) this;
        }

        public Criteria andUserinfoidEqualTo(Integer value) {
            addCriterion("userinfoid =", value, "userinfoid");
            return (Criteria) this;
        }

        public Criteria andUserinfoidNotEqualTo(Integer value) {
            addCriterion("userinfoid <>", value, "userinfoid");
            return (Criteria) this;
        }

        public Criteria andUserinfoidGreaterThan(Integer value) {
            addCriterion("userinfoid >", value, "userinfoid");
            return (Criteria) this;
        }

        public Criteria andUserinfoidGreaterThanOrEqualTo(Integer value) {
            addCriterion("userinfoid >=", value, "userinfoid");
            return (Criteria) this;
        }

        public Criteria andUserinfoidLessThan(Integer value) {
            addCriterion("userinfoid <", value, "userinfoid");
            return (Criteria) this;
        }

        public Criteria andUserinfoidLessThanOrEqualTo(Integer value) {
            addCriterion("userinfoid <=", value, "userinfoid");
            return (Criteria) this;
        }

        public Criteria andUserinfoidIn(List<Integer> values) {
            addCriterion("userinfoid in", values, "userinfoid");
            return (Criteria) this;
        }

        public Criteria andUserinfoidNotIn(List<Integer> values) {
            addCriterion("userinfoid not in", values, "userinfoid");
            return (Criteria) this;
        }

        public Criteria andUserinfoidBetween(Integer value1, Integer value2) {
            addCriterion("userinfoid between", value1, value2, "userinfoid");
            return (Criteria) this;
        }

        public Criteria andUserinfoidNotBetween(Integer value1, Integer value2) {
            addCriterion("userinfoid not between", value1, value2, "userinfoid");
            return (Criteria) this;
        }

        public Criteria andRestamountIsNull() {
            addCriterion("restamount is null");
            return (Criteria) this;
        }

        public Criteria andRestamountIsNotNull() {
            addCriterion("restamount is not null");
            return (Criteria) this;
        }

        public Criteria andRestamountEqualTo(Double value) {
            addCriterion("restamount =", value, "restamount");
            return (Criteria) this;
        }

        public Criteria andRestamountNotEqualTo(Double value) {
            addCriterion("restamount <>", value, "restamount");
            return (Criteria) this;
        }

        public Criteria andRestamountGreaterThan(Double value) {
            addCriterion("restamount >", value, "restamount");
            return (Criteria) this;
        }

        public Criteria andRestamountGreaterThanOrEqualTo(Double value) {
            addCriterion("restamount >=", value, "restamount");
            return (Criteria) this;
        }

        public Criteria andRestamountLessThan(Double value) {
            addCriterion("restamount <", value, "restamount");
            return (Criteria) this;
        }

        public Criteria andRestamountLessThanOrEqualTo(Double value) {
            addCriterion("restamount <=", value, "restamount");
            return (Criteria) this;
        }

        public Criteria andRestamountIn(List<Double> values) {
            addCriterion("restamount in", values, "restamount");
            return (Criteria) this;
        }

        public Criteria andRestamountNotIn(List<Double> values) {
            addCriterion("restamount not in", values, "restamount");
            return (Criteria) this;
        }

        public Criteria andRestamountBetween(Double value1, Double value2) {
            addCriterion("restamount between", value1, value2, "restamount");
            return (Criteria) this;
        }

        public Criteria andRestamountNotBetween(Double value1, Double value2) {
            addCriterion("restamount not between", value1, value2, "restamount");
            return (Criteria) this;
        }

        public Criteria andIsfinishedIsNull() {
            addCriterion("isfinished is null");
            return (Criteria) this;
        }

        public Criteria andIsfinishedIsNotNull() {
            addCriterion("isfinished is not null");
            return (Criteria) this;
        }

        public Criteria andIsfinishedEqualTo(Boolean value) {
            addCriterion("isfinished =", value, "isfinished");
            return (Criteria) this;
        }

        public Criteria andIsfinishedNotEqualTo(Boolean value) {
            addCriterion("isfinished <>", value, "isfinished");
            return (Criteria) this;
        }

        public Criteria andIsfinishedGreaterThan(Boolean value) {
            addCriterion("isfinished >", value, "isfinished");
            return (Criteria) this;
        }

        public Criteria andIsfinishedGreaterThanOrEqualTo(Boolean value) {
            addCriterion("isfinished >=", value, "isfinished");
            return (Criteria) this;
        }

        public Criteria andIsfinishedLessThan(Boolean value) {
            addCriterion("isfinished <", value, "isfinished");
            return (Criteria) this;
        }

        public Criteria andIsfinishedLessThanOrEqualTo(Boolean value) {
            addCriterion("isfinished <=", value, "isfinished");
            return (Criteria) this;
        }

        public Criteria andIsfinishedIn(List<Boolean> values) {
            addCriterion("isfinished in", values, "isfinished");
            return (Criteria) this;
        }

        public Criteria andIsfinishedNotIn(List<Boolean> values) {
            addCriterion("isfinished not in", values, "isfinished");
            return (Criteria) this;
        }

        public Criteria andIsfinishedBetween(Boolean value1, Boolean value2) {
            addCriterion("isfinished between", value1, value2, "isfinished");
            return (Criteria) this;
        }

        public Criteria andIsfinishedNotBetween(Boolean value1, Boolean value2) {
            addCriterion("isfinished not between", value1, value2, "isfinished");
            return (Criteria) this;
        }

        public Criteria andRepaytimeIsNull() {
            addCriterion("repaytime is null");
            return (Criteria) this;
        }

        public Criteria andRepaytimeIsNotNull() {
            addCriterion("repaytime is not null");
            return (Criteria) this;
        }

        public Criteria andRepaytimeEqualTo(Date value) {
            addCriterion("repaytime =", value, "repaytime");
            return (Criteria) this;
        }

        public Criteria andRepaytimeNotEqualTo(Date value) {
            addCriterion("repaytime <>", value, "repaytime");
            return (Criteria) this;
        }

        public Criteria andRepaytimeGreaterThan(Date value) {
            addCriterion("repaytime >", value, "repaytime");
            return (Criteria) this;
        }

        public Criteria andRepaytimeGreaterThanOrEqualTo(Date value) {
            addCriterion("repaytime >=", value, "repaytime");
            return (Criteria) this;
        }

        public Criteria andRepaytimeLessThan(Date value) {
            addCriterion("repaytime <", value, "repaytime");
            return (Criteria) this;
        }

        public Criteria andRepaytimeLessThanOrEqualTo(Date value) {
            addCriterion("repaytime <=", value, "repaytime");
            return (Criteria) this;
        }

        public Criteria andRepaytimeIn(List<Date> values) {
            addCriterion("repaytime in", values, "repaytime");
            return (Criteria) this;
        }

        public Criteria andRepaytimeNotIn(List<Date> values) {
            addCriterion("repaytime not in", values, "repaytime");
            return (Criteria) this;
        }

        public Criteria andRepaytimeBetween(Date value1, Date value2) {
            addCriterion("repaytime between", value1, value2, "repaytime");
            return (Criteria) this;
        }

        public Criteria andRepaytimeNotBetween(Date value1, Date value2) {
            addCriterion("repaytime not between", value1, value2, "repaytime");
            return (Criteria) this;
        }

        public Criteria andActualrepaytimeIsNull() {
            addCriterion("actualrepaytime is null");
            return (Criteria) this;
        }

        public Criteria andActualrepaytimeIsNotNull() {
            addCriterion("actualrepaytime is not null");
            return (Criteria) this;
        }

        public Criteria andActualrepaytimeEqualTo(Date value) {
            addCriterion("actualrepaytime =", value, "actualrepaytime");
            return (Criteria) this;
        }

        public Criteria andActualrepaytimeNotEqualTo(Date value) {
            addCriterion("actualrepaytime <>", value, "actualrepaytime");
            return (Criteria) this;
        }

        public Criteria andActualrepaytimeGreaterThan(Date value) {
            addCriterion("actualrepaytime >", value, "actualrepaytime");
            return (Criteria) this;
        }

        public Criteria andActualrepaytimeGreaterThanOrEqualTo(Date value) {
            addCriterion("actualrepaytime >=", value, "actualrepaytime");
            return (Criteria) this;
        }

        public Criteria andActualrepaytimeLessThan(Date value) {
            addCriterion("actualrepaytime <", value, "actualrepaytime");
            return (Criteria) this;
        }

        public Criteria andActualrepaytimeLessThanOrEqualTo(Date value) {
            addCriterion("actualrepaytime <=", value, "actualrepaytime");
            return (Criteria) this;
        }

        public Criteria andActualrepaytimeIn(List<Date> values) {
            addCriterion("actualrepaytime in", values, "actualrepaytime");
            return (Criteria) this;
        }

        public Criteria andActualrepaytimeNotIn(List<Date> values) {
            addCriterion("actualrepaytime not in", values, "actualrepaytime");
            return (Criteria) this;
        }

        public Criteria andActualrepaytimeBetween(Date value1, Date value2) {
            addCriterion("actualrepaytime between", value1, value2, "actualrepaytime");
            return (Criteria) this;
        }

        public Criteria andActualrepaytimeNotBetween(Date value1, Date value2) {
            addCriterion("actualrepaytime not between", value1, value2, "actualrepaytime");
            return (Criteria) this;
        }

        public Criteria andIsovertimeIsNull() {
            addCriterion("isovertime is null");
            return (Criteria) this;
        }

        public Criteria andIsovertimeIsNotNull() {
            addCriterion("isovertime is not null");
            return (Criteria) this;
        }

        public Criteria andIsovertimeEqualTo(Boolean value) {
            addCriterion("isovertime =", value, "isovertime");
            return (Criteria) this;
        }

        public Criteria andIsovertimeNotEqualTo(Boolean value) {
            addCriterion("isovertime <>", value, "isovertime");
            return (Criteria) this;
        }

        public Criteria andIsovertimeGreaterThan(Boolean value) {
            addCriterion("isovertime >", value, "isovertime");
            return (Criteria) this;
        }

        public Criteria andIsovertimeGreaterThanOrEqualTo(Boolean value) {
            addCriterion("isovertime >=", value, "isovertime");
            return (Criteria) this;
        }

        public Criteria andIsovertimeLessThan(Boolean value) {
            addCriterion("isovertime <", value, "isovertime");
            return (Criteria) this;
        }

        public Criteria andIsovertimeLessThanOrEqualTo(Boolean value) {
            addCriterion("isovertime <=", value, "isovertime");
            return (Criteria) this;
        }

        public Criteria andIsovertimeIn(List<Boolean> values) {
            addCriterion("isovertime in", values, "isovertime");
            return (Criteria) this;
        }

        public Criteria andIsovertimeNotIn(List<Boolean> values) {
            addCriterion("isovertime not in", values, "isovertime");
            return (Criteria) this;
        }

        public Criteria andIsovertimeBetween(Boolean value1, Boolean value2) {
            addCriterion("isovertime between", value1, value2, "isovertime");
            return (Criteria) this;
        }

        public Criteria andIsovertimeNotBetween(Boolean value1, Boolean value2) {
            addCriterion("isovertime not between", value1, value2, "isovertime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table repay
     *
     * @mbggenerated do_not_delete_during_merge Mon Aug 19 15:11:02 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table repay
     *
     * @mbggenerated Mon Aug 19 15:11:02 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}