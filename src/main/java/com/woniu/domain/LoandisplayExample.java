package com.woniu.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class LoandisplayExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table loandisplay
     *
     * @mbggenerated Mon Aug 19 15:11:02 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table loandisplay
     *
     * @mbggenerated Mon Aug 19 15:11:02 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table loandisplay
     *
     * @mbggenerated Mon Aug 19 15:11:02 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table loandisplay
     *
     * @mbggenerated Mon Aug 19 15:11:02 CST 2019
     */
    public LoandisplayExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table loandisplay
     *
     * @mbggenerated Mon Aug 19 15:11:02 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table loandisplay
     *
     * @mbggenerated Mon Aug 19 15:11:02 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table loandisplay
     *
     * @mbggenerated Mon Aug 19 15:11:02 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table loandisplay
     *
     * @mbggenerated Mon Aug 19 15:11:02 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table loandisplay
     *
     * @mbggenerated Mon Aug 19 15:11:02 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table loandisplay
     *
     * @mbggenerated Mon Aug 19 15:11:02 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table loandisplay
     *
     * @mbggenerated Mon Aug 19 15:11:02 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table loandisplay
     *
     * @mbggenerated Mon Aug 19 15:11:02 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table loandisplay
     *
     * @mbggenerated Mon Aug 19 15:11:02 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table loandisplay
     *
     * @mbggenerated Mon Aug 19 15:11:02 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table loandisplay
     *
     * @mbggenerated Mon Aug 19 15:11:02 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andLoandisplayidIsNull() {
            addCriterion("loandisplayid is null");
            return (Criteria) this;
        }

        public Criteria andLoandisplayidIsNotNull() {
            addCriterion("loandisplayid is not null");
            return (Criteria) this;
        }

        public Criteria andLoandisplayidEqualTo(Integer value) {
            addCriterion("loandisplayid =", value, "loandisplayid");
            return (Criteria) this;
        }

        public Criteria andLoandisplayidNotEqualTo(Integer value) {
            addCriterion("loandisplayid <>", value, "loandisplayid");
            return (Criteria) this;
        }

        public Criteria andLoandisplayidGreaterThan(Integer value) {
            addCriterion("loandisplayid >", value, "loandisplayid");
            return (Criteria) this;
        }

        public Criteria andLoandisplayidGreaterThanOrEqualTo(Integer value) {
            addCriterion("loandisplayid >=", value, "loandisplayid");
            return (Criteria) this;
        }

        public Criteria andLoandisplayidLessThan(Integer value) {
            addCriterion("loandisplayid <", value, "loandisplayid");
            return (Criteria) this;
        }

        public Criteria andLoandisplayidLessThanOrEqualTo(Integer value) {
            addCriterion("loandisplayid <=", value, "loandisplayid");
            return (Criteria) this;
        }

        public Criteria andLoandisplayidIn(List<Integer> values) {
            addCriterion("loandisplayid in", values, "loandisplayid");
            return (Criteria) this;
        }

        public Criteria andLoandisplayidNotIn(List<Integer> values) {
            addCriterion("loandisplayid not in", values, "loandisplayid");
            return (Criteria) this;
        }

        public Criteria andLoandisplayidBetween(Integer value1, Integer value2) {
            addCriterion("loandisplayid between", value1, value2, "loandisplayid");
            return (Criteria) this;
        }

        public Criteria andLoandisplayidNotBetween(Integer value1, Integer value2) {
            addCriterion("loandisplayid not between", value1, value2, "loandisplayid");
            return (Criteria) this;
        }

        public Criteria andDisplaytimeIsNull() {
            addCriterion("displaytime is null");
            return (Criteria) this;
        }

        public Criteria andDisplaytimeIsNotNull() {
            addCriterion("displaytime is not null");
            return (Criteria) this;
        }

        public Criteria andDisplaytimeEqualTo(Date value) {
            addCriterion("displaytime =", value, "displaytime");
            return (Criteria) this;
        }

        public Criteria andDisplaytimeNotEqualTo(Date value) {
            addCriterion("displaytime <>", value, "displaytime");
            return (Criteria) this;
        }

        public Criteria andDisplaytimeGreaterThan(Date value) {
            addCriterion("displaytime >", value, "displaytime");
            return (Criteria) this;
        }

        public Criteria andDisplaytimeGreaterThanOrEqualTo(Date value) {
            addCriterion("displaytime >=", value, "displaytime");
            return (Criteria) this;
        }

        public Criteria andDisplaytimeLessThan(Date value) {
            addCriterion("displaytime <", value, "displaytime");
            return (Criteria) this;
        }

        public Criteria andDisplaytimeLessThanOrEqualTo(Date value) {
            addCriterion("displaytime <=", value, "displaytime");
            return (Criteria) this;
        }

        public Criteria andDisplaytimeIn(List<Date> values) {
            addCriterion("displaytime in", values, "displaytime");
            return (Criteria) this;
        }

        public Criteria andDisplaytimeNotIn(List<Date> values) {
            addCriterion("displaytime not in", values, "displaytime");
            return (Criteria) this;
        }

        public Criteria andDisplaytimeBetween(Date value1, Date value2) {
            addCriterion("displaytime between", value1, value2, "displaytime");
            return (Criteria) this;
        }

        public Criteria andDisplaytimeNotBetween(Date value1, Date value2) {
            addCriterion("displaytime not between", value1, value2, "displaytime");
            return (Criteria) this;
        }

        public Criteria andDeadtimeIsNull() {
            addCriterion("deadtime is null");
            return (Criteria) this;
        }

        public Criteria andDeadtimeIsNotNull() {
            addCriterion("deadtime is not null");
            return (Criteria) this;
        }

        public Criteria andDeadtimeEqualTo(Date value) {
            addCriterion("deadtime =", value, "deadtime");
            return (Criteria) this;
        }

        public Criteria andDeadtimeNotEqualTo(Date value) {
            addCriterion("deadtime <>", value, "deadtime");
            return (Criteria) this;
        }

        public Criteria andDeadtimeGreaterThan(Date value) {
            addCriterion("deadtime >", value, "deadtime");
            return (Criteria) this;
        }

        public Criteria andDeadtimeGreaterThanOrEqualTo(Date value) {
            addCriterion("deadtime >=", value, "deadtime");
            return (Criteria) this;
        }

        public Criteria andDeadtimeLessThan(Date value) {
            addCriterion("deadtime <", value, "deadtime");
            return (Criteria) this;
        }

        public Criteria andDeadtimeLessThanOrEqualTo(Date value) {
            addCriterion("deadtime <=", value, "deadtime");
            return (Criteria) this;
        }

        public Criteria andDeadtimeIn(List<Date> values) {
            addCriterion("deadtime in", values, "deadtime");
            return (Criteria) this;
        }

        public Criteria andDeadtimeNotIn(List<Date> values) {
            addCriterion("deadtime not in", values, "deadtime");
            return (Criteria) this;
        }

        public Criteria andDeadtimeBetween(Date value1, Date value2) {
            addCriterion("deadtime between", value1, value2, "deadtime");
            return (Criteria) this;
        }

        public Criteria andDeadtimeNotBetween(Date value1, Date value2) {
            addCriterion("deadtime not between", value1, value2, "deadtime");
            return (Criteria) this;
        }

        public Criteria andIsfinishedIsNull() {
            addCriterion("isfinished is null");
            return (Criteria) this;
        }

        public Criteria andIsfinishedIsNotNull() {
            addCriterion("isfinished is not null");
            return (Criteria) this;
        }

        public Criteria andIsfinishedEqualTo(Boolean value) {
            addCriterion("isfinished =", value, "isfinished");
            return (Criteria) this;
        }

        public Criteria andIsfinishedNotEqualTo(Boolean value) {
            addCriterion("isfinished <>", value, "isfinished");
            return (Criteria) this;
        }

        public Criteria andIsfinishedGreaterThan(Boolean value) {
            addCriterion("isfinished >", value, "isfinished");
            return (Criteria) this;
        }

        public Criteria andIsfinishedGreaterThanOrEqualTo(Boolean value) {
            addCriterion("isfinished >=", value, "isfinished");
            return (Criteria) this;
        }

        public Criteria andIsfinishedLessThan(Boolean value) {
            addCriterion("isfinished <", value, "isfinished");
            return (Criteria) this;
        }

        public Criteria andIsfinishedLessThanOrEqualTo(Boolean value) {
            addCriterion("isfinished <=", value, "isfinished");
            return (Criteria) this;
        }

        public Criteria andIsfinishedIn(List<Boolean> values) {
            addCriterion("isfinished in", values, "isfinished");
            return (Criteria) this;
        }

        public Criteria andIsfinishedNotIn(List<Boolean> values) {
            addCriterion("isfinished not in", values, "isfinished");
            return (Criteria) this;
        }

        public Criteria andIsfinishedBetween(Boolean value1, Boolean value2) {
            addCriterion("isfinished between", value1, value2, "isfinished");
            return (Criteria) this;
        }

        public Criteria andIsfinishedNotBetween(Boolean value1, Boolean value2) {
            addCriterion("isfinished not between", value1, value2, "isfinished");
            return (Criteria) this;
        }

        public Criteria andIsdeadIsNull() {
            addCriterion("isdead is null");
            return (Criteria) this;
        }

        public Criteria andIsdeadIsNotNull() {
            addCriterion("isdead is not null");
            return (Criteria) this;
        }

        public Criteria andIsdeadEqualTo(Boolean value) {
            addCriterion("isdead =", value, "isdead");
            return (Criteria) this;
        }

        public Criteria andIsdeadNotEqualTo(Boolean value) {
            addCriterion("isdead <>", value, "isdead");
            return (Criteria) this;
        }

        public Criteria andIsdeadGreaterThan(Boolean value) {
            addCriterion("isdead >", value, "isdead");
            return (Criteria) this;
        }

        public Criteria andIsdeadGreaterThanOrEqualTo(Boolean value) {
            addCriterion("isdead >=", value, "isdead");
            return (Criteria) this;
        }

        public Criteria andIsdeadLessThan(Boolean value) {
            addCriterion("isdead <", value, "isdead");
            return (Criteria) this;
        }

        public Criteria andIsdeadLessThanOrEqualTo(Boolean value) {
            addCriterion("isdead <=", value, "isdead");
            return (Criteria) this;
        }

        public Criteria andIsdeadIn(List<Boolean> values) {
            addCriterion("isdead in", values, "isdead");
            return (Criteria) this;
        }

        public Criteria andIsdeadNotIn(List<Boolean> values) {
            addCriterion("isdead not in", values, "isdead");
            return (Criteria) this;
        }

        public Criteria andIsdeadBetween(Boolean value1, Boolean value2) {
            addCriterion("isdead between", value1, value2, "isdead");
            return (Criteria) this;
        }

        public Criteria andIsdeadNotBetween(Boolean value1, Boolean value2) {
            addCriterion("isdead not between", value1, value2, "isdead");
            return (Criteria) this;
        }

        public Criteria andLoanapplyidIsNull() {
            addCriterion("loanapplyid is null");
            return (Criteria) this;
        }

        public Criteria andLoanapplyidIsNotNull() {
            addCriterion("loanapplyid is not null");
            return (Criteria) this;
        }

        public Criteria andLoanapplyidEqualTo(Integer value) {
            addCriterion("loanapplyid =", value, "loanapplyid");
            return (Criteria) this;
        }

        public Criteria andLoanapplyidNotEqualTo(Integer value) {
            addCriterion("loanapplyid <>", value, "loanapplyid");
            return (Criteria) this;
        }

        public Criteria andLoanapplyidGreaterThan(Integer value) {
            addCriterion("loanapplyid >", value, "loanapplyid");
            return (Criteria) this;
        }

        public Criteria andLoanapplyidGreaterThanOrEqualTo(Integer value) {
            addCriterion("loanapplyid >=", value, "loanapplyid");
            return (Criteria) this;
        }

        public Criteria andLoanapplyidLessThan(Integer value) {
            addCriterion("loanapplyid <", value, "loanapplyid");
            return (Criteria) this;
        }

        public Criteria andLoanapplyidLessThanOrEqualTo(Integer value) {
            addCriterion("loanapplyid <=", value, "loanapplyid");
            return (Criteria) this;
        }

        public Criteria andLoanapplyidIn(List<Integer> values) {
            addCriterion("loanapplyid in", values, "loanapplyid");
            return (Criteria) this;
        }

        public Criteria andLoanapplyidNotIn(List<Integer> values) {
            addCriterion("loanapplyid not in", values, "loanapplyid");
            return (Criteria) this;
        }

        public Criteria andLoanapplyidBetween(Integer value1, Integer value2) {
            addCriterion("loanapplyid between", value1, value2, "loanapplyid");
            return (Criteria) this;
        }

        public Criteria andLoanapplyidNotBetween(Integer value1, Integer value2) {
            addCriterion("loanapplyid not between", value1, value2, "loanapplyid");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table loandisplay
     *
     * @mbggenerated do_not_delete_during_merge Mon Aug 19 15:11:02 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table loandisplay
     *
     * @mbggenerated Mon Aug 19 15:11:02 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}