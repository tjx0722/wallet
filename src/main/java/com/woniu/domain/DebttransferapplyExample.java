package com.woniu.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class DebttransferapplyExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table debttransferapply
     *
     * @mbggenerated Mon Aug 19 15:11:02 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table debttransferapply
     *
     * @mbggenerated Mon Aug 19 15:11:02 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table debttransferapply
     *
     * @mbggenerated Mon Aug 19 15:11:02 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table debttransferapply
     *
     * @mbggenerated Mon Aug 19 15:11:02 CST 2019
     */
    public DebttransferapplyExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table debttransferapply
     *
     * @mbggenerated Mon Aug 19 15:11:02 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table debttransferapply
     *
     * @mbggenerated Mon Aug 19 15:11:02 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table debttransferapply
     *
     * @mbggenerated Mon Aug 19 15:11:02 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table debttransferapply
     *
     * @mbggenerated Mon Aug 19 15:11:02 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table debttransferapply
     *
     * @mbggenerated Mon Aug 19 15:11:02 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table debttransferapply
     *
     * @mbggenerated Mon Aug 19 15:11:02 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table debttransferapply
     *
     * @mbggenerated Mon Aug 19 15:11:02 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table debttransferapply
     *
     * @mbggenerated Mon Aug 19 15:11:02 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table debttransferapply
     *
     * @mbggenerated Mon Aug 19 15:11:02 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table debttransferapply
     *
     * @mbggenerated Mon Aug 19 15:11:02 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table debttransferapply
     *
     * @mbggenerated Mon Aug 19 15:11:02 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andDebttransferapplyidIsNull() {
            addCriterion("debttransferapplyid is null");
            return (Criteria) this;
        }

        public Criteria andDebttransferapplyidIsNotNull() {
            addCriterion("debttransferapplyid is not null");
            return (Criteria) this;
        }

        public Criteria andDebttransferapplyidEqualTo(Integer value) {
            addCriterion("debttransferapplyid =", value, "debttransferapplyid");
            return (Criteria) this;
        }

        public Criteria andDebttransferapplyidNotEqualTo(Integer value) {
            addCriterion("debttransferapplyid <>", value, "debttransferapplyid");
            return (Criteria) this;
        }

        public Criteria andDebttransferapplyidGreaterThan(Integer value) {
            addCriterion("debttransferapplyid >", value, "debttransferapplyid");
            return (Criteria) this;
        }

        public Criteria andDebttransferapplyidGreaterThanOrEqualTo(Integer value) {
            addCriterion("debttransferapplyid >=", value, "debttransferapplyid");
            return (Criteria) this;
        }

        public Criteria andDebttransferapplyidLessThan(Integer value) {
            addCriterion("debttransferapplyid <", value, "debttransferapplyid");
            return (Criteria) this;
        }

        public Criteria andDebttransferapplyidLessThanOrEqualTo(Integer value) {
            addCriterion("debttransferapplyid <=", value, "debttransferapplyid");
            return (Criteria) this;
        }

        public Criteria andDebttransferapplyidIn(List<Integer> values) {
            addCriterion("debttransferapplyid in", values, "debttransferapplyid");
            return (Criteria) this;
        }

        public Criteria andDebttransferapplyidNotIn(List<Integer> values) {
            addCriterion("debttransferapplyid not in", values, "debttransferapplyid");
            return (Criteria) this;
        }

        public Criteria andDebttransferapplyidBetween(Integer value1, Integer value2) {
            addCriterion("debttransferapplyid between", value1, value2, "debttransferapplyid");
            return (Criteria) this;
        }

        public Criteria andDebttransferapplyidNotBetween(Integer value1, Integer value2) {
            addCriterion("debttransferapplyid not between", value1, value2, "debttransferapplyid");
            return (Criteria) this;
        }

        public Criteria andUserinfoidIsNull() {
            addCriterion("userinfoid is null");
            return (Criteria) this;
        }

        public Criteria andUserinfoidIsNotNull() {
            addCriterion("userinfoid is not null");
            return (Criteria) this;
        }

        public Criteria andUserinfoidEqualTo(Integer value) {
            addCriterion("userinfoid =", value, "userinfoid");
            return (Criteria) this;
        }

        public Criteria andUserinfoidNotEqualTo(Integer value) {
            addCriterion("userinfoid <>", value, "userinfoid");
            return (Criteria) this;
        }

        public Criteria andUserinfoidGreaterThan(Integer value) {
            addCriterion("userinfoid >", value, "userinfoid");
            return (Criteria) this;
        }

        public Criteria andUserinfoidGreaterThanOrEqualTo(Integer value) {
            addCriterion("userinfoid >=", value, "userinfoid");
            return (Criteria) this;
        }

        public Criteria andUserinfoidLessThan(Integer value) {
            addCriterion("userinfoid <", value, "userinfoid");
            return (Criteria) this;
        }

        public Criteria andUserinfoidLessThanOrEqualTo(Integer value) {
            addCriterion("userinfoid <=", value, "userinfoid");
            return (Criteria) this;
        }

        public Criteria andUserinfoidIn(List<Integer> values) {
            addCriterion("userinfoid in", values, "userinfoid");
            return (Criteria) this;
        }

        public Criteria andUserinfoidNotIn(List<Integer> values) {
            addCriterion("userinfoid not in", values, "userinfoid");
            return (Criteria) this;
        }

        public Criteria andUserinfoidBetween(Integer value1, Integer value2) {
            addCriterion("userinfoid between", value1, value2, "userinfoid");
            return (Criteria) this;
        }

        public Criteria andUserinfoidNotBetween(Integer value1, Integer value2) {
            addCriterion("userinfoid not between", value1, value2, "userinfoid");
            return (Criteria) this;
        }

        public Criteria andInvestidIsNull() {
            addCriterion("investid is null");
            return (Criteria) this;
        }

        public Criteria andInvestidIsNotNull() {
            addCriterion("investid is not null");
            return (Criteria) this;
        }

        public Criteria andInvestidEqualTo(Integer value) {
            addCriterion("investid =", value, "investid");
            return (Criteria) this;
        }

        public Criteria andInvestidNotEqualTo(Integer value) {
            addCriterion("investid <>", value, "investid");
            return (Criteria) this;
        }

        public Criteria andInvestidGreaterThan(Integer value) {
            addCriterion("investid >", value, "investid");
            return (Criteria) this;
        }

        public Criteria andInvestidGreaterThanOrEqualTo(Integer value) {
            addCriterion("investid >=", value, "investid");
            return (Criteria) this;
        }

        public Criteria andInvestidLessThan(Integer value) {
            addCriterion("investid <", value, "investid");
            return (Criteria) this;
        }

        public Criteria andInvestidLessThanOrEqualTo(Integer value) {
            addCriterion("investid <=", value, "investid");
            return (Criteria) this;
        }

        public Criteria andInvestidIn(List<Integer> values) {
            addCriterion("investid in", values, "investid");
            return (Criteria) this;
        }

        public Criteria andInvestidNotIn(List<Integer> values) {
            addCriterion("investid not in", values, "investid");
            return (Criteria) this;
        }

        public Criteria andInvestidBetween(Integer value1, Integer value2) {
            addCriterion("investid between", value1, value2, "investid");
            return (Criteria) this;
        }

        public Criteria andInvestidNotBetween(Integer value1, Integer value2) {
            addCriterion("investid not between", value1, value2, "investid");
            return (Criteria) this;
        }

        public Criteria andApplytimeIsNull() {
            addCriterion("applytime is null");
            return (Criteria) this;
        }

        public Criteria andApplytimeIsNotNull() {
            addCriterion("applytime is not null");
            return (Criteria) this;
        }

        public Criteria andApplytimeEqualTo(Date value) {
            addCriterion("applytime =", value, "applytime");
            return (Criteria) this;
        }

        public Criteria andApplytimeNotEqualTo(Date value) {
            addCriterion("applytime <>", value, "applytime");
            return (Criteria) this;
        }

        public Criteria andApplytimeGreaterThan(Date value) {
            addCriterion("applytime >", value, "applytime");
            return (Criteria) this;
        }

        public Criteria andApplytimeGreaterThanOrEqualTo(Date value) {
            addCriterion("applytime >=", value, "applytime");
            return (Criteria) this;
        }

        public Criteria andApplytimeLessThan(Date value) {
            addCriterion("applytime <", value, "applytime");
            return (Criteria) this;
        }

        public Criteria andApplytimeLessThanOrEqualTo(Date value) {
            addCriterion("applytime <=", value, "applytime");
            return (Criteria) this;
        }

        public Criteria andApplytimeIn(List<Date> values) {
            addCriterion("applytime in", values, "applytime");
            return (Criteria) this;
        }

        public Criteria andApplytimeNotIn(List<Date> values) {
            addCriterion("applytime not in", values, "applytime");
            return (Criteria) this;
        }

        public Criteria andApplytimeBetween(Date value1, Date value2) {
            addCriterion("applytime between", value1, value2, "applytime");
            return (Criteria) this;
        }

        public Criteria andApplytimeNotBetween(Date value1, Date value2) {
            addCriterion("applytime not between", value1, value2, "applytime");
            return (Criteria) this;
        }

        public Criteria andCheckedIsNull() {
            addCriterion("checked is null");
            return (Criteria) this;
        }

        public Criteria andCheckedIsNotNull() {
            addCriterion("checked is not null");
            return (Criteria) this;
        }

        public Criteria andCheckedEqualTo(Boolean value) {
            addCriterion("checked =", value, "checked");
            return (Criteria) this;
        }

        public Criteria andCheckedNotEqualTo(Boolean value) {
            addCriterion("checked <>", value, "checked");
            return (Criteria) this;
        }

        public Criteria andCheckedGreaterThan(Boolean value) {
            addCriterion("checked >", value, "checked");
            return (Criteria) this;
        }

        public Criteria andCheckedGreaterThanOrEqualTo(Boolean value) {
            addCriterion("checked >=", value, "checked");
            return (Criteria) this;
        }

        public Criteria andCheckedLessThan(Boolean value) {
            addCriterion("checked <", value, "checked");
            return (Criteria) this;
        }

        public Criteria andCheckedLessThanOrEqualTo(Boolean value) {
            addCriterion("checked <=", value, "checked");
            return (Criteria) this;
        }

        public Criteria andCheckedIn(List<Boolean> values) {
            addCriterion("checked in", values, "checked");
            return (Criteria) this;
        }

        public Criteria andCheckedNotIn(List<Boolean> values) {
            addCriterion("checked not in", values, "checked");
            return (Criteria) this;
        }

        public Criteria andCheckedBetween(Boolean value1, Boolean value2) {
            addCriterion("checked between", value1, value2, "checked");
            return (Criteria) this;
        }

        public Criteria andCheckedNotBetween(Boolean value1, Boolean value2) {
            addCriterion("checked not between", value1, value2, "checked");
            return (Criteria) this;
        }

        public Criteria andServicechargeIsNull() {
            addCriterion("servicecharge is null");
            return (Criteria) this;
        }

        public Criteria andServicechargeIsNotNull() {
            addCriterion("servicecharge is not null");
            return (Criteria) this;
        }

        public Criteria andServicechargeEqualTo(Double value) {
            addCriterion("servicecharge =", value, "servicecharge");
            return (Criteria) this;
        }

        public Criteria andServicechargeNotEqualTo(Double value) {
            addCriterion("servicecharge <>", value, "servicecharge");
            return (Criteria) this;
        }

        public Criteria andServicechargeGreaterThan(Double value) {
            addCriterion("servicecharge >", value, "servicecharge");
            return (Criteria) this;
        }

        public Criteria andServicechargeGreaterThanOrEqualTo(Double value) {
            addCriterion("servicecharge >=", value, "servicecharge");
            return (Criteria) this;
        }

        public Criteria andServicechargeLessThan(Double value) {
            addCriterion("servicecharge <", value, "servicecharge");
            return (Criteria) this;
        }

        public Criteria andServicechargeLessThanOrEqualTo(Double value) {
            addCriterion("servicecharge <=", value, "servicecharge");
            return (Criteria) this;
        }

        public Criteria andServicechargeIn(List<Double> values) {
            addCriterion("servicecharge in", values, "servicecharge");
            return (Criteria) this;
        }

        public Criteria andServicechargeNotIn(List<Double> values) {
            addCriterion("servicecharge not in", values, "servicecharge");
            return (Criteria) this;
        }

        public Criteria andServicechargeBetween(Double value1, Double value2) {
            addCriterion("servicecharge between", value1, value2, "servicecharge");
            return (Criteria) this;
        }

        public Criteria andServicechargeNotBetween(Double value1, Double value2) {
            addCriterion("servicecharge not between", value1, value2, "servicecharge");
            return (Criteria) this;
        }

        public Criteria andServicechargeidIsNull() {
            addCriterion("servicechargeid is null");
            return (Criteria) this;
        }

        public Criteria andServicechargeidIsNotNull() {
            addCriterion("servicechargeid is not null");
            return (Criteria) this;
        }

        public Criteria andServicechargeidEqualTo(Integer value) {
            addCriterion("servicechargeid =", value, "servicechargeid");
            return (Criteria) this;
        }

        public Criteria andServicechargeidNotEqualTo(Integer value) {
            addCriterion("servicechargeid <>", value, "servicechargeid");
            return (Criteria) this;
        }

        public Criteria andServicechargeidGreaterThan(Integer value) {
            addCriterion("servicechargeid >", value, "servicechargeid");
            return (Criteria) this;
        }

        public Criteria andServicechargeidGreaterThanOrEqualTo(Integer value) {
            addCriterion("servicechargeid >=", value, "servicechargeid");
            return (Criteria) this;
        }

        public Criteria andServicechargeidLessThan(Integer value) {
            addCriterion("servicechargeid <", value, "servicechargeid");
            return (Criteria) this;
        }

        public Criteria andServicechargeidLessThanOrEqualTo(Integer value) {
            addCriterion("servicechargeid <=", value, "servicechargeid");
            return (Criteria) this;
        }

        public Criteria andServicechargeidIn(List<Integer> values) {
            addCriterion("servicechargeid in", values, "servicechargeid");
            return (Criteria) this;
        }

        public Criteria andServicechargeidNotIn(List<Integer> values) {
            addCriterion("servicechargeid not in", values, "servicechargeid");
            return (Criteria) this;
        }

        public Criteria andServicechargeidBetween(Integer value1, Integer value2) {
            addCriterion("servicechargeid between", value1, value2, "servicechargeid");
            return (Criteria) this;
        }

        public Criteria andServicechargeidNotBetween(Integer value1, Integer value2) {
            addCriterion("servicechargeid not between", value1, value2, "servicechargeid");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table debttransferapply
     *
     * @mbggenerated do_not_delete_during_merge Mon Aug 19 15:11:02 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table debttransferapply
     *
     * @mbggenerated Mon Aug 19 15:11:02 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}